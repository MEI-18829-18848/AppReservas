package com.appreservas.reservas.utilizador.generated;

import com.appreservas.reservas.utilizador.Utilizador;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.appreservas.reservas.utilizador.Utilizador}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUtilizadorImpl implements Utilizador {
    
    private int utilizadorid;
    private String role;
    
    protected GeneratedUtilizadorImpl() {}
    
    @Override
    public int getUtilizadorid() {
        return utilizadorid;
    }
    
    @Override
    public String getRole() {
        return role;
    }
    
    @Override
    public Utilizador setUtilizadorid(int utilizadorid) {
        this.utilizadorid = utilizadorid;
        return this;
    }
    
    @Override
    public Utilizador setRole(String role) {
        this.role = role;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("utilizadorid = " + Objects.toString(getUtilizadorid()));
        sj.add("role = "         + Objects.toString(getRole()));
        return "UtilizadorImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Utilizador)) { return false; }
        final Utilizador thatUtilizador = (Utilizador)that;
        if (this.getUtilizadorid() != thatUtilizador.getUtilizadorid()) { return false; }
        if (!Objects.equals(this.getRole(), thatUtilizador.getRole())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getUtilizadorid());
        hash = 31 * hash + Objects.hashCode(getRole());
        return hash;
    }
}