package com.appreservas.reservas.sala.generated;

import com.appreservas.reservas.sala.Sala;
import com.appreservas.reservas.sala.SalaImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.util.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link com.appreservas.reservas.sala.Sala}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSalaSqlAdapter implements SqlAdapter<Sala> {
    
    private final TableIdentifier<Sala> tableIdentifier;
    
    protected GeneratedSalaSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("appreservas", "reservas", "sala");
    }
    
    protected Sala apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setSalaid(          getInt(resultSet, 1 + offset))
            .setNome(            resultSet.getString(2 + offset))
            .setLocalizacao(     resultSet.getString(3 + offset))
            .setLugaresmarcados( getBoolean(resultSet, 4 + offset))
            .setLotacao(         getInt(resultSet, 5 + offset))
            ;
    }
    
    protected SalaImpl createEntity() {
        return new SalaImpl();
    }
    
    @Override
    public TableIdentifier<Sala> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Sala> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Sala> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}