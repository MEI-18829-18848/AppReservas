package com.appreservas.reservas.reservalugar.generated;

import com.appreservas.reservas.lugar.Lugar;
import com.appreservas.reservas.reserva.Reserva;
import com.appreservas.reservas.reservalugar.Reservalugar;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.appreservas.reservas.reservalugar.Reservalugar}-interface
 * representing entities of the {@code reservalugar}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedReservalugar {
    
    /**
     * This Field corresponds to the {@link Reservalugar} field that can be
     * obtained using the {@link Reservalugar#getReservaid()} method.
     */
    IntForeignKeyField<Reservalugar, Integer, Reserva> RESERVAID = DatastoreFields.createIntForeignKeyField(
        Identifier.RESERVAID,
        Reservalugar::getReservaid,
        Reservalugar::setReservaid,
        Reserva.RESERVAID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Reservalugar} field that can be
     * obtained using the {@link Reservalugar#getLugarid()} method.
     */
    IntForeignKeyField<Reservalugar, Integer, Lugar> LUGARID = DatastoreFields.createIntForeignKeyField(
        Identifier.LUGARID,
        Reservalugar::getLugarid,
        Reservalugar::setLugarid,
        Lugar.LUGARID,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the reservaid of this Reservalugar. The reservaid field
     * corresponds to the database column
     * appreservas.reservas.reservalugar.reservaid.
     * 
     * @return the reservaid of this Reservalugar
     */
    int getReservaid();
    
    /**
     * Returns the lugarid of this Reservalugar. The lugarid field corresponds
     * to the database column appreservas.reservas.reservalugar.lugarid.
     * 
     * @return the lugarid of this Reservalugar
     */
    int getLugarid();
    
    /**
     * Sets the reservaid of this Reservalugar. The reservaid field corresponds
     * to the database column appreservas.reservas.reservalugar.reservaid.
     * 
     * @param reservaid to set of this Reservalugar
     * @return          this Reservalugar instance
     */
    Reservalugar setReservaid(int reservaid);
    
    /**
     * Sets the lugarid of this Reservalugar. The lugarid field corresponds to
     * the database column appreservas.reservas.reservalugar.lugarid.
     * 
     * @param lugarid to set of this Reservalugar
     * @return        this Reservalugar instance
     */
    Reservalugar setLugarid(int lugarid);
    
    /**
     * Queries the specified manager for the referenced Reserva. If no such
     * Reserva exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Reserva findReservaid(Manager<Reserva> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Lugar. If no such Lugar
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Lugar findLugarid(Manager<Lugar> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Reservalugar> {
        
        RESERVAID ("reservaid"),
        LUGARID   ("lugarid");
        
        private final String columnId;
        private final TableIdentifier<Reservalugar> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "appreservas";
        }
        
        @Override
        public String getSchemaId() {
            return "reservas";
        }
        
        @Override
        public String getTableId() {
            return "reservalugar";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Reservalugar> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}