package com.appreservas.reservas.organizador.generated;

import com.appreservas.reservas.organizador.Organizador;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.appreservas.reservas.organizador.Organizador}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOrganizadorImpl implements Organizador {
    
    private int organizadorid;
    private String nome;
    private String contacto;
    private int appuserid;
    
    protected GeneratedOrganizadorImpl() {}
    
    @Override
    public int getOrganizadorid() {
        return organizadorid;
    }
    
    @Override
    public String getNome() {
        return nome;
    }
    
    @Override
    public Optional<String> getContacto() {
        return Optional.ofNullable(contacto);
    }
    
    @Override
    public int getAppuserid() {
        return appuserid;
    }
    
    @Override
    public Organizador setOrganizadorid(int organizadorid) {
        this.organizadorid = organizadorid;
        return this;
    }
    
    @Override
    public Organizador setNome(String nome) {
        this.nome = nome;
        return this;
    }
    
    @Override
    public Organizador setContacto(String contacto) {
        this.contacto = contacto;
        return this;
    }
    
    @Override
    public Organizador setAppuserid(int appuserid) {
        this.appuserid = appuserid;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("organizadorid = " + Objects.toString(getOrganizadorid()));
        sj.add("nome = "          + Objects.toString(getNome()));
        sj.add("contacto = "      + Objects.toString(OptionalUtil.unwrap(getContacto())));
        sj.add("appuserid = "     + Objects.toString(getAppuserid()));
        return "OrganizadorImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Organizador)) { return false; }
        final Organizador thatOrganizador = (Organizador)that;
        if (this.getOrganizadorid() != thatOrganizador.getOrganizadorid()) { return false; }
        if (!Objects.equals(this.getNome(), thatOrganizador.getNome())) { return false; }
        if (!Objects.equals(this.getContacto(), thatOrganizador.getContacto())) { return false; }
        if (this.getAppuserid() != thatOrganizador.getAppuserid()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getOrganizadorid());
        hash = 31 * hash + Objects.hashCode(getNome());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getContacto()));
        hash = 31 * hash + Integer.hashCode(getAppuserid());
        return hash;
    }
}