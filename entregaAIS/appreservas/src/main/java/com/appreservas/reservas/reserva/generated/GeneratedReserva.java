package com.appreservas.reservas.reserva.generated;

import com.appreservas.reservas.cliente.Cliente;
import com.appreservas.reservas.reserva.Reserva;
import com.appreservas.reservas.sessao.Sessao;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.enterprise.datastore.runtime.field.DatastoreFields;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.IntForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.math.BigDecimal;
import java.util.Optional;

/**
 * The generated base for the {@link
 * com.appreservas.reservas.reserva.Reserva}-interface representing entities of
 * the {@code reserva}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedReserva {
    
    /**
     * This Field corresponds to the {@link Reserva} field that can be obtained
     * using the {@link Reserva#getReservaid()} method.
     */
    IntField<Reserva, Integer> RESERVAID = DatastoreFields.createIntField(
        Identifier.RESERVAID,
        Reserva::getReservaid,
        Reserva::setReservaid,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Reserva} field that can be obtained
     * using the {@link Reserva#getSessaoid()} method.
     */
    IntForeignKeyField<Reserva, Integer, Sessao> SESSAOID = DatastoreFields.createIntForeignKeyField(
        Identifier.SESSAOID,
        Reserva::getSessaoid,
        Reserva::setSessaoid,
        Sessao.SESSAOID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Reserva} field that can be obtained
     * using the {@link Reserva#getClienteid()} method.
     */
    IntForeignKeyField<Reserva, Integer, Cliente> CLIENTEID = DatastoreFields.createIntForeignKeyField(
        Identifier.CLIENTEID,
        Reserva::getClienteid,
        Reserva::setClienteid,
        Cliente.CLIENTEID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Reserva} field that can be obtained
     * using the {@link Reserva#getCusto()} method.
     */
    ComparableField<Reserva, BigDecimal, BigDecimal> CUSTO = DatastoreFields.createComparableField(
        Identifier.CUSTO,
        o -> OptionalUtil.unwrap(o.getCusto()),
        Reserva::setCusto,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the reservaid of this Reserva. The reservaid field corresponds to
     * the database column appreservas.reservas.reserva.reservaid.
     * 
     * @return the reservaid of this Reserva
     */
    int getReservaid();
    
    /**
     * Returns the sessaoid of this Reserva. The sessaoid field corresponds to
     * the database column appreservas.reservas.reserva.sessaoid.
     * 
     * @return the sessaoid of this Reserva
     */
    int getSessaoid();
    
    /**
     * Returns the clienteid of this Reserva. The clienteid field corresponds to
     * the database column appreservas.reservas.reserva.clienteid.
     * 
     * @return the clienteid of this Reserva
     */
    int getClienteid();
    
    /**
     * Returns the custo of this Reserva. The custo field corresponds to the
     * database column appreservas.reservas.reserva.custo.
     * 
     * @return the custo of this Reserva
     */
    Optional<BigDecimal> getCusto();
    
    /**
     * Sets the reservaid of this Reserva. The reservaid field corresponds to
     * the database column appreservas.reservas.reserva.reservaid.
     * 
     * @param reservaid to set of this Reserva
     * @return          this Reserva instance
     */
    Reserva setReservaid(int reservaid);
    
    /**
     * Sets the sessaoid of this Reserva. The sessaoid field corresponds to the
     * database column appreservas.reservas.reserva.sessaoid.
     * 
     * @param sessaoid to set of this Reserva
     * @return         this Reserva instance
     */
    Reserva setSessaoid(int sessaoid);
    
    /**
     * Sets the clienteid of this Reserva. The clienteid field corresponds to
     * the database column appreservas.reservas.reserva.clienteid.
     * 
     * @param clienteid to set of this Reserva
     * @return          this Reserva instance
     */
    Reserva setClienteid(int clienteid);
    
    /**
     * Sets the custo of this Reserva. The custo field corresponds to the
     * database column appreservas.reservas.reserva.custo.
     * 
     * @param custo to set of this Reserva
     * @return      this Reserva instance
     */
    Reserva setCusto(BigDecimal custo);
    
    /**
     * Queries the specified manager for the referenced Sessao. If no such
     * Sessao exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Sessao findSessaoid(Manager<Sessao> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Cliente. If no such
     * Cliente exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Cliente findClienteid(Manager<Cliente> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Reserva> {
        
        RESERVAID ("reservaid"),
        SESSAOID  ("sessaoid"),
        CLIENTEID ("clienteid"),
        CUSTO     ("custo");
        
        private final String columnId;
        private final TableIdentifier<Reserva> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "appreservas";
        }
        
        @Override
        public String getSchemaId() {
            return "reservas";
        }
        
        @Override
        public String getTableId() {
            return "reserva";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Reserva> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}