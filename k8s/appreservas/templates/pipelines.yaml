
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
data:
  main.conf: |
    input {
    rabbitmq {
        id => "rabbitmq_auth_logs"
        # connect to rabbit
        host => 172.23.0.3
        port => 5672
        vhost => "/"
        # Create a new queue
        queue => "AuthLogs"
        durable => "false"
        # Take a copy of all messages with the "app_version_queue" routing key from the existing exchange
        exchange => "AuthProvider"
        exchange_type => "topic"
        durable => "false"
        key => "auth-log"
        # No ack will boost your perf
        ack => false
        tags => "auth"
      }
    rabbitmq {
        id => "rabbitmq_appreservas_logs"
        # connect to rabbit
        host => 172.23.0.3
        port => 5672
        vhost => "/"
        # Create a new queue
        queue => "AppReservas"
        durable => "false"
        # Take a copy of all messages with the "app_version_queue" routing key from the existing exchange
        exchange => "AppReservas"
        exchange_type => "topic"
        durable => "false"
        key => "app-log"
        # No ack will boost your perf
        ack => false
        tags => "app"
      }
    }  
    
    output {
      if "auth" in [tags]{
        opensearch {
        hosts       => "https://search-appreservas-ln6bfecsbc5hb45wgbgtcdhpfi.eu-west-3.es.amazonaws.com"
        user        => "appreservas"
        password    => "#appReservas2023"
        index       => "auth-logs-%{+YYYY.MM.dd}"
        }  
      }
      if "app" in [tags]{
        opensearch {
        hosts       => "https://search-appreservas-ln6bfecsbc5hb45wgbgtcdhpfi.eu-west-3.es.amazonaws.com"
        user        => "appreservas"
        password    => "#appReservas2023"
        index       => "app-logs-%{+YYYY.MM.dd}"
        }  
      }       
    }